node {
   def mvnHome
   def giturl = "https://github.com/bharathuppiretla/spring-petclinic.git" 
   def repoBranch = "master" 
   def server =Artifactory.server 'artifactory'
    stage('Git-Checkout') { // for display purposes
      // Get code from a GitHub repository
      gitClone "${gitURL}","${repoBranch}"     
      // Get the Maven tool.           
      mvnHome = tool 'mvn'
   }
   
   stage('Quality Analysis') {
        withSonarQubeEnv('sonar') {
        sh 'mvn clean package sonar:sonar'
        }
    }
    
    stage("Quality Gate"){
       timeout(time: 1, unit: 'HOURS') { 
           def qg = waitForQualityGate() 
            if (qg.status != 'OK') {
                currentBuild.status='FAILURE'
               error "Pipeline aborted due to quality gate failure: ${qg.status}"
            }
        }
    }
   
   stage('Build') {
      // Run the maven build
      withEnv(["MVN_HOME=$mvnHome"]) {
         if (isUnix()) {
            sh '"$MVN_HOME/bin/mvn" -Dmaven.test.failure.ignore clean package'
         } else {
            bat(/"%MVN_HOME%\bin\mvn" -Dmaven.test.failure.ignore clean package/)
         }
      }
   }
   stage('Artifactory upload') { 
        def uploadSpec = """ 
        {  
		"files": [ { "pattern": "/var/lib/jenkins/workspace/example_pipeline/target/*.jar", "target": "example-repo-local" } ]  
        }"""  
        server.upload(uploadSpec) 
        }
  
  stage('Petclinic Docker Image') {
   
sh "sudo docker build -t bharathuppiretla/petclinic ."
sh "sudo docker push bharathuppiretla/petclinic"

}
stage('composeup')
{
sh "sudo docker-compose up -d --build"
sh "sudo docker pull bharathuppiretla/petclinic"
}  
}
